version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.7
    environment:
      AWS_DEFAULT_REGION: ap-south-1
      REPOSITORY_URI: 894185188610.dkr.ecr.ap-south-1.amazonaws.com/new-repo
      ECS_CLUSTER_NAME: newcluster
      ECS_SERVICE_NAME: newfintechservice

    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli
      - run:
          name: Configure AWS CLI
          command: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - run:
          name: Copy .env from S3
          command: aws s3 cp s3://aditya-birla/.env .env
      - run:
          name: Login to Amazon ECR
          command: aws ecr get-login-password | docker login --username AWS --password-stdin $REPOSITORY_URI
      - run:
          name: Build and Push Docker image
          command: |
            docker build --build-arg ENV_FILE=.env -t $REPOSITORY_URI:$CIRCLE_SHA1 .
            docker push $REPOSITORY_URI:$CIRCLE_SHA1
            docker tag $REPOSITORY_URI:$CIRCLE_SHA1 $REPOSITORY_URI:latest
            docker push $REPOSITORY_URI:latest
      - run:
          name: Register new task definition
          command: |
            NEW_TASK_DEF=$(aws ecs register-task-definition --family fintech-centrum --cli-input-json "$(cat \EOF
            {
              \"family\": \"fintech-centrum\",
              \"networkMode\": \"bridge\",
              \"containerDefinitions\": [
                {
                  \"name\": \"fintechimage\",
                  \"image\": \"$REPOSITORY_URI:$CIRCLE_SHA1\",
                  \"essential\": true,
                  \"memory\": 256,
                  \"cpu\": 256,
                  \"portMappings\": [
                    {
                      \"containerPort\": 8001,
                      \"hostPort\": 1
                    }
                  ]
                }
              ]
            }
            \EOF
            )" | jq -r .taskDefinition.taskDefinitionArn)
      - run:
          name: Update ECS service
          command: aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --task-definition $NEW_TASK_DEF
      - store_artifacts:
          path: imagedefinitions.json

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
